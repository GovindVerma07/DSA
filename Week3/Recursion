Q1 : Given an integer, find out the sum of its digits using recursion.
Ans. import java.util.Scanner;
    public class DSARecursion1 {
    public static long sumOfNum(long num){
        if(num/10 == 0){
            return num;
        }
        else{
            return num%10 + sumOfNum(num/10);
        }
    }
    public static void main(String[] args) {
        System.out.println("Enter a number : ");
        Scanner sc = new Scanner(System.in);
        long num = sc.nextLong();
        long result = sumOfNum(num);
        System.out.println("The sum of digit of entered number is "+result);
        sc.close();
    }
  }

Q2: Given a number n. Find the sum of natural numbers till n but with alternate signs.That means if n = 5 then you have to return 1-2+3-4+5 = 3 as your answer.
Ans. import java.util.Scanner;
    public class DSARecursion2 { 
    public static int sumOfNaturalNumber(int num,int i){
        if(i == num+1){
            return 0;
        }
        else{
            if(i%2 == 0){
                return sumOfNaturalNumber(num, i+1) - i;
            }
            else{
                return sumOfNaturalNumber(num, i+1) + i;
            }
        }
    }
    public static void main(String[] args) {
        System.out.println("Enter a Natural Number : ");
        Scanner sc = new Scanner(System.in);
        int num = sc.nextInt();
        int result = sumOfNaturalNumber(num,1);
        System.out.println(result);
        sc.close();
    }
   }

Q3: Print the max value of the array [ 13, 1, -3, 22, 5].
Ans. public class DSARecursion3{
    public static int maxValue(int arr[], int n, int idx){
        if(idx == n - 1)
        return arr[n - 1];
        int maxOfLaterIndices = maxValue(arr, n,idx + 1);
        int maxVal = Math.max(arr[idx], maxOfLaterIndices);
        return maxVal;
    }
    public static void main(String[] args) {
        int[] arr={13,1,-3,22,5};
        int n=arr.length;
        System.out.println("The max value is : " + maxValue(arr,n,0));
    }
}

Q4 : Find the sum of the values of the array [92, 23, 15, -20, 10].
Ans. public class DSARecursion4 {
     public static int sumOfArrayValues(int[] arr,int idx){
        if(idx == arr.length-1){
            return arr[idx];
        }
        else{
            return arr[idx] + sumOfArrayValues(arr, idx+1);
        }
     }
     public static void main(String[] args) {
        int[] arr = {92, 23, 15, -20, 10};
        int result = sumOfArrayValues(arr, 0);
        System.out.println(result);
     }
   }

Q5. Given a number n. Print if it is an armstrong number or not. An armstrong number is a number if the sum of every digit in that number raised to the power of total digits in that number is equal to the number.
Ans. public class Armstrong {
         int power(int x, long y)
    {
        if (y == 0)
            return 1;
        if (y % 2 == 0)
            return power(x, y / 2) * power(x, y / 2);
        return x * power(x, y / 2) * power(x, y / 2);
    }
     int order(int x)
    {
        int n = 0;
        while (x != 0) {
            n++;
            x = x / 10;
        }
        return n;
    }
    boolean isArmstrong(int x)
    {
        int n = order(x);
        int temp = x, sum = 0;
        while (temp != 0) {
            int r = temp % 10;
            sum = sum + power(r, n);
            temp = temp / 10;
        }
 
        return (sum == x);
    }
    public static void main(String[] args)
    {
        Armstrong ob = new Armstrong();
        int x = 153;
        System.out.println(ob.isArmstrong(x));
        x = 1253;
        System.out.println(ob.isArmstrong(x));
    }
}


